{"ast":null,"code":"var _jsxFileName = \"I:\\\\end\\\\project-3-React\\\\my-menu\\\\src\\\\components\\\\ItemList.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemsList = _ref => {\n  _s();\n  let {\n    itemsData\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: itemsData.length >= 1 ? itemsData.map(item => {\n      var _ref2, _jsonData$t$language;\n      return /*#__PURE__*/_jsxDEV(Col, {\n        sm: \"12\",\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"d-flex flex-row\",\n          style: {\n            backgroundColor: '#F8F8F8'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            className: \"img-item\",\n            variant: \"top\",\n            src: item.imgUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              className: \"d-flex justify-content-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-title\",\n                children: t(`cardTitle_${item.id}`) || ((_ref2 = [t.language]) === null || _ref2 === void 0 ? void 0 : _ref2[`cardTitle_${item.id}`])\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 18,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-price\",\n                children: [item.price, \" \", t('price')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              className: \"py-2\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item-description\",\n                children: t(`cardDescription_${item.id}`) || ((_jsonData$t$language = jsonData[t.language]) === null || _jsonData$t$language === void 0 ? void 0 : _jsonData$t$language[`cardDescription_${item.id}`])\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-center\",\n      children: t('noItems')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_s(ItemsList, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n_c = ItemsList;\nexport default ItemsList;\nvar _c;\n$RefreshReg$(_c, \"ItemsList\");","map":{"version":3,"names":["React","Row","Col","Card","useTranslation","jsxDEV","_jsxDEV","ItemsList","_ref","_s","itemsData","t","children","length","map","item","_ref2","_jsonData$t$language","sm","className","style","backgroundColor","Img","variant","src","imgUrl","fileName","_jsxFileName","lineNumber","columnNumber","Body","Title","id","language","price","Text","jsonData","_c","$RefreshReg$"],"sources":["I:/end/project-3-React/my-menu/src/components/ItemList.js"],"sourcesContent":["import React from 'react';\r\nimport { Row, Col, Card } from 'react-bootstrap';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n\r\nconst ItemsList = ({ itemsData }) => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <Row>\r\n      {itemsData.length >= 1 ? (\r\n        itemsData.map((item) => (\r\n          <Col key={item.id} sm=\"12\" className=\"mb-3\">\r\n            <Card className=\"d-flex flex-row\" style={{ backgroundColor: '#F8F8F8' }}>\r\n              <Card.Img className=\"img-item\" variant=\"top\" src={item.imgUrl} />\r\n              <Card.Body>\r\n                <Card.Title className=\"d-flex justify-content-between\">\r\n                  <div className=\"item-title\">\r\n                    {t(`cardTitle_${item.id}`) || [t.language]?.[`cardTitle_${item.id}`]}\r\n                  </div>\r\n                  <div className=\"item-price\">\r\n                    {item.price} {t('price')}\r\n                  </div>\r\n                </Card.Title>\r\n                <Card.Text className=\"py-2\">\r\n                  <div className=\"item-description\">\r\n                    {t(`cardDescription_${item.id}`) || jsonData[t.language]?.[`cardDescription_${item.id}`]}\r\n                  </div>\r\n                </Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        ))\r\n      ) : (\r\n        <h3 className=\"text-center\">{t('noItems')}</h3>\r\n      )}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ItemsList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}